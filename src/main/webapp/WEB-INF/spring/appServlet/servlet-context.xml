<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />










	<!--  
	SpringMVC로 요청이 들어오면 제일먼저 DispatcherServlet이 요청을 받는다.
	그리고 아래 설정된 기본패키지를 검색(scan)한 후 @Controllor 어노테이션이 
	설정된 클래스의 요청명이 매핑된 메소드를 찾아 실행한다.
	-->
	
	<!--기본패키지를 추가한다 그러면 새로운 요청이 들어왔을때
	아래 2개의 패키지를 스캔하여 컨트롤러를 찾게 된다.  -->
	<!--  	Spring-JDBC 1차버전에서 사용 	new로 dao객체 생성해야함-->
	<!-- <context:component-scan base-package="springboard.controller" /> -->
	<!--  	Spring-JDBC2차버전에서 사용	 : DI로 DAO 객체 생성하게 됨 -->
	<context:component-scan base-package="springboard" />





	<!--  
	SPRING JDBC를 사용하기위한 빈 생성
	해당 XML파일에서 JDBC연결을 위한 빈을 생성한후 컨트롤러에서 자동주입
	(Autowired) 받아서 사용하게 된다.
	-->
	<!--1 오라클연결정보를 가진 datasource 빈 생성-->
	<beans:bean name="dataSource8" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name="username" value="kosmo" />
		<beans:property name="password" value="1234" />
	</beans:bean>
	<!--2 dataSource를 기반으로 JDBCTemplate을 사용하기위한 빈-->
	<beans:bean name="template" 
		class="org.springframework.jdbc.core.JdbcTemplate">
		<!--dataSource는 org.springframework.jdbc.core.JdbcTemplate
		클래스의 멤버변수명임으로 변경시 에러가 난다-->
		<beans:property name="dataSource" ref="dataSource8" />
	</beans:bean>
	<!--3 templete를 기반으로 게시판에서 사용한 DAO 빈 생성 => DI로 적용하기위해 추가함-->
	<beans:bean name="dao" class="springboard.model.JDBCTemplateDAO">
		<beans:property name="template" ref="template"/>
	</beans:bean>








	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kosmo.k11jdbctemplate" />
	
	
	
</beans:beans>
